problem 1:
URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

Example
Input: "Jasmine Ann Jones"

Output: "Jasmine%20Ann%20Jones"

// seperate sentence by spaces
// join back together replacing spaces with %20
// return result

non recursive solution

function (string) {
  const result = string.split(' ').join(%20);
  return result;
}

recursive solution 

const function = (string) => {
  if (string[i] === ' ') {
    
  }
}

////////////////////////////////////////////////

probelm 2:

Write an algorithm that removes duplicates from an array. Do not use a function like filter() to solve this. Once you have solved the problem, demonstrate how it can be solved with filter(). Solve the problem with and without recursion.

Example
Input: [7, 9, "hi", 12, "hi" 7, 53]

Output: [7, 9, "hi", 12, 53]

//loop through array with i 
//nest loop with j 
// check if j === i then splice j 

function (array) {
  let changedArray = array;
  for(let i = 0; i < changedArray.length; i ++){
    for(let j = 0; i < changedArray.length i ++){
      if (j === i) {
        changedArray.splice(j,1)
      } else {
        return changedArray;
      }
    }
  }
}
